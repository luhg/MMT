package eu.modernmt.processing.string;

import eu.modernmt.lang.Language;
import eu.modernmt.lang.UnsupportedLanguageException;
import eu.modernmt.model.Sentence;
import eu.modernmt.processing.ProcessingException;
import eu.modernmt.processing.TextProcessor;

import java.util.Map;

/**
 * Created by andrea on 02/03/17.
 * <p>
 * A SentenceCompiler is a TextProcessor that can create SentenceObjects
 * by requesting their building to a SentenceBuilder instance.
 */
public class SentenceCompiler extends TextProcessor<SentenceBuilder, Sentence> {

    /**
     * This constructor initializes a SentenceCompiler.
     * A SentenceCompiler doesn't need to remember any information
     * about the source or target language.
     *
     * @param sourceLanguage the language of the input String
     * @param targetLanguage the language the input String must be translated to
     * @throws UnsupportedLanguageException the requested language is not supported by this software
     */
    public SentenceCompiler(Language sourceLanguage, Language targetLanguage) throws UnsupportedLanguageException {
        super(sourceLanguage, targetLanguage);
    }

    /**
     * This method asks the SentenceBuilder to generate a Sentence object,
     * starting from the Transformations list
     * filled by the others TextProcessors during the previous processing phases
     *
     * @param builder  the SentenceBuilder with the current string
     *                 and the list of Transformations to execute,
     *                 and is ready to generate Tokens and build the Sentence
     * @param metadata additional information on the current pipe
     *                 (not used in this specific operation)
     * @return the Sentence generated by the SentenceBuilder
     * @throws ProcessingException
     */
    @Override
    public Sentence call(SentenceBuilder builder, Map<String, Object> metadata) throws ProcessingException {

        Sentence s = builder.build();
        builder.clear();
        return s;
    }
}
